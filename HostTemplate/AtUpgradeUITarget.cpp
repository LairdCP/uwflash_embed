/******************************************************************************
**              Copyright (C) 2015 Laird Technologies
**
** Project:     Console mode UwFlash Upgrade Utility
**
** Module:      ATUPGRADEUITARGET.CPP
**
*******************************************************************************/

/******************************************************************************/
// CONDITIONAL COMPILE DEFINES
/******************************************************************************/

/******************************************************************************/
// Include Files
/******************************************************************************/
#include <stdlib.h>
#include <stdio.h>

#include "AtUpgradeUITarget.h"
#include "UwFlash.h"

/******************************************************************************/
// Local Defines
/******************************************************************************/

/******************************************************************************/
// Local Macros
/******************************************************************************/

/******************************************************************************/
// Local Forward Class,Struct & Union Declarations
/******************************************************************************/

/******************************************************************************/
// Local Class,Struct,Union Typedefs
/******************************************************************************/

/******************************************************************************/
// External Variable Declarations
/******************************************************************************/

/******************************************************************************/
// Global/Static Variable Declarations
/******************************************************************************/

/******************************************************************************/
// External Function Declarations
/******************************************************************************/

/******************************************************************************/
// Local Forward Function Declarations
/******************************************************************************/

/******************************************************************************/
/******************************************************************************/
// Local Functions or Private Members
/******************************************************************************/
/******************************************************************************/

/******************************************************************************/
/******************************************************************************/
// Global Functions or Public Members
/******************************************************************************/
/******************************************************************************/

//------------------------------------------------------------------------------
// Constructor
//------------------------------------------------------------------------------
AtUpgradeUITarget::AtUpgradeUITarget()
{
}

//------------------------------------------------------------------------------
// Destructor
//------------------------------------------------------------------------------
AtUpgradeUITarget::~AtUpgradeUITarget()
{
}

//------------------------------------------------------------------------------
// If your system has a display or console output, then send the string in pMsg
// to that.
//------------------------------------------------------------------------------
void 
AtUpgradeUITarget::WriteToMemo(
    char *pMsg  /* string to be displayed */
    )
{
    /* TODO */
    CODE_TO_BE_WRITTEN_HERE

    For example ...
    //printf("\n%s",pMsg);
}

/*=============================================================================*/
//
// This is called on startup to help you display a progress bar if you have a
// user interface. Use maxval as guide with regards to how much 100% progress
// means
//
/*=============================================================================*/
void AtUpgradeUITarget::InitAndShowMainProgressBar(UI32 minVal, UI32 maxVal)
{
    /* TODO */
    CODE_TO_BE_WRITTEN_HERE
}

/*=============================================================================*/
// As the upgrade process advances this function is called with a value which
// will be in the range minVal and maxVal (as provided by InitAndShowMainProgressBar()
// which then allows you to judge a progress bar of appropriate legth.
/*=============================================================================*/
void AtUpgradeUITarget::UpdateMainProgressBar(UI32 curVal)
{
    /* TODO */
    CODE_TO_BE_WRITTEN_HERE

    for example ...
    //if(gCount<curVal)
    //{
    //    printf(".");
    //    gCount +=  gChunk;
    //}
}

/*=============================================================================*/
// This is called when an assert fails
/*=============================================================================*/
extern "C"
UI16 DisplayAssertMessage(char *pMsg)
{
    /* TODO */
    CODE_TO_BE_WRITTEN_HERE

    for example ...
    //printf("\n\n\nASSERT/FAIL : %s\n\n", pMsg );


    return 0;
}

/*=============================================================================*/
// This is called when a trace message is to displayed
/*=============================================================================*/
extern "C"
VOID DisplayTraceMessage(char *pMsg)
{
    /* TODO */
    CODE_TO_BE_WRITTEN_HERE

    for example ...
    //printf("\n\n\nTRACE : %s\n\n", pMsg );
}

/******************************************************************************/
// END OF FILE
/******************************************************************************/

